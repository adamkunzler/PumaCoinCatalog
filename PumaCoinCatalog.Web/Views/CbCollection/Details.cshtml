@model PumaCoinCatalog.Web.Models.CbCollection.CbCollectionDetailsViewModel

@{
    ViewBag.Title = Model.Title;
}

@section pageHeader {
    <div class="coin-breadcrumb">
        <a href="@Url.Action("Index", "CbCollection")">Collections</a>
        <span>&#x25BA;</span>
        @Model.Title
    </div>
}

<style type="text/css">
    .cbchecklist-row {
        font-size: 18px;
        margin-bottom: 10px;
    }

    .cbchecklist-row .progress {
        height: 25px;
    }

        .cbchecklist-row .progress-label {
            margin-top: -25px;
        }

        .cbchecklist-row .image-coin-type-small {
            max-width: 45%;
            display: inline;
        }

        .middle {
            position: relative;            
            transform: translateY(25%);
        }    
</style>

<div id="divCollectionDetailsContainer">
    @Html.HiddenFor(x => x.Id, new { id = "hidCollectionId" })

    <div id="divActions" class="row">
        <button class="btn btn-primary" onclick="showCreateChecklist();">Create a Checklist</button>
    </div>

    <br />


    @Html.Partial("_newChecklist", Model.NewChecklistViewModel)

    <br />

    <div id="divChecklists">
        @if (Model.Checklists.Any())
    {
        @*<ul>
            @foreach (var checklist in Model.Checklists)
            {
                <li><a href="@Url.Action("Index", "CbChecklist", new { checklistId = checklist.Checklist.Id })">@checklist.Checklist.Title</a></li>
            }
        </ul>*@
        foreach (var checklist in Model.Checklists)
        {
            <div class="row cbchecklist-row">
                <div class="col-md-1">
                    @Html.Partial("../CbCoinData/_coinImageSmall", checklist.TypeDetails.ImageViewModel)
                </div>
                <div class="col-md-3 middle">
                    <a href="@Url.Action("Index", "CbChecklist", new { checklistId = checklist.Checklist.Id })">@checklist.Checklist.Title</a>
                </div>
                <div class="col-md-3 middle">
                    @Html.Partial("../CbChecklist/_coinCountBar", checklist.ValueSummary.CoinCountBar)
                </div>
                <div class="col-md-3 middle">
                    <span class="info">Value: </span><span>$@checklist.ValueSummary.CollectionValueTotal</span>
                </div>
            </div>
        }
}
else
{
    <h3>No checklists have been created.</h3>
}
    </div>
</div>

@section scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            resetMenu();
            setActiveMenu('/CbCollection');
        });

        function showCreateChecklist() {
            $("#divNewChecklist").toggle();
            $("#divActions").toggle();
        }

        function cancelCreateChecklist() {
            $("#divNewChecklist").toggle();
            $("#divActions").toggle();
        }

        function createChecklist() {
            var collectionId = $("#hidCollectionId").val();
            var typeId = $("#ddlTypes").val();
            var title = $("#checklistTitle").val();

            $.ajax({
                type: 'POST',
                url: '/CbCollection/CreateChecklist?collectionId=' + collectionId + '&title=' + title + '&typeId=' + typeId,
                success: function (result) {
                    if (result.result == "success") {
                        window.location = '@Url.Action("Index", "CbChecklist")?checklistId=' + result.checklistId;
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        }

        //
        // when a country is changed, update the denominations drop down
        //
        function ddlCountriesChange() {
            var countryId = $("#ddlCountries").val();

            $.ajax({
                type: 'POST',
                url: '/CbCollection/GetCbDenominationsDropDown?countryId=' + countryId,
                success: function (result) {
                    $("#divDenominations").html(result.denominationsDropDownHtml);
                    $("#divVarieties").html(result.varietiesDropDownHtml);
                    $("#divTypes").html(result.typesDropDownHtml);
                }
            });
        }

        //
        // when a denomination is changed, update the varieties drop down
        //
        function ddlDenominationsChange() {
            var denominationId = $("#ddlDenominations").val();

            $.ajax({
                type: 'POST',
                url: '/CbCollection/GetCbVarietiesDropDown?denominationId=' + denominationId,
                success: function (result) {
                    $("#divVarieties").html(result.varietiesDropDownHtml);
                    $("#divTypes").html(result.typesDropDownHtml);
                }
            });
        }

        //
        // when a variety is changed, update the types drop down
        //
        function ddlVarietiesChange() {
            var varietyId = $("#ddlVarieties").val();

            $.ajax({
                type: 'POST',
                url: '/CbCollection/GetCbTypesDropDown?varietyId=' + varietyId,
                success: function (result) {
                    $("#divTypes").html(result);
                }
            });
        }
    </script>
}
